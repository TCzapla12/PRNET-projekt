syntax = "proto3";

option csharp_namespace = "grpc_hello_world";

service AuthService {
  rpc Authenticate(AuthRequest) returns (AuthResponse);
}

message AuthRequest {
  string email = 1;
  string password = 2;
}

message AuthResponse {
  string token = 1;
}


service UserService {
    rpc CreateUser (UserCreate) returns (UserMinimal);
    rpc GetUser (UserGet) returns (UserFull);
    rpc UpdateUser (UserUpdate) returns (UserUpdate);  // Only updated fields are returned
    rpc DeleteUser (UserMinimal) returns (UserMinimal);
}


message UserMinimal {
    string email = 1;
}

message UserUpdate {
    string email = 1;
    optional string username = 2;
    optional string first_name = 3;
    optional string last_name = 4;
    optional string phone = 5;
    optional string pesel = 6;
    // Updating addresses done in a different endpoint
    optional string avatar_url = 7;
    optional string document_url = 8;
    // States
    optional bool is_activated = 9;
    optional bool is_verified = 10;
    optional bool is_banned = 11;
    optional bool is_admin = 12;
}

message UserCreate {
    string email = 1;
    string username = 2;
    string password = 3;
    string first_name = 4;
    string last_name = 5;
    AddressCreate primary_address = 6;
    string phone = 7;
    string pesel = 8;

    optional string avatar_url = 9;
    optional string document_url = 10;
}

message UserGet {
    optional string email = 1;
    optional string username = 2;
    optional string first_name = 3;
    optional string last_name = 4;
    optional string phone = 5;
    optional string pesel = 6;
    // Updating addresses done in a different endpoint
    optional string avatar_url = 7;
    optional string document_url = 8;
    // States
    optional bool is_activated = 9;
    optional bool is_verified = 10;
    optional bool is_banned = 11;
    optional bool is_admin = 12;
}

message UserFull {
    string email = 1;
    string username = 2;
    string first_name = 3;
    string last_name = 4;
    string phone = 5;
    string pesel = 6;
    AddressCreate primary_address = 7;
    string avatar_url = 8;
    string document_url = 9;
    // States
    bool is_activated = 10;
    bool is_verified = 11;
    bool is_banned = 12;
    bool is_admin = 13;
}


service AddressService {
    rpc CreateAddress (AddressCreate) returns (AddressMinimal);
    rpc GetUserAddresses (AddressGet) returns (AddressList);
    rpc GetAddress (AddressGet) returns (AddressList);
    rpc UpdateAddress (AddressUpdate) returns (AddressUpdate);
    rpc DeleteAddress (AddressUpdate) returns (AddressMinimal);
}
message AddressMinimal {
    string id = 1;
    string owner_email = 2;
}

message AddressCreate {
    optional string id = 1;
    string street = 2;
    optional string house_number = 3;
    string city = 4;
    string post_code = 5;
    string owner_email = 6;
}
message AddressGet {
    optional string id = 1;
    optional string street = 2;
    optional string house_number = 3;
    optional string city = 4;
    optional string post_code = 5;
    optional string owner_email = 6;
}
message AddressUpdate {
    string id = 1;
    optional string street = 2;
    optional string house_number = 3;
    optional string city = 4;
    optional string post_code = 5;
}

message AddressList {
    repeated AddressCreate addresses = 1;
}

service AnnouncementService {
    rpc GetAnnouncement (AnnouncementFull) returns (CreateAnnouncementResponse);
}

message AnnouncementFull {
    optional string id = 1;
    string author_email = 2;
    string keeper_email = 3;
    optional uint32 keeper_profit = 4;
    optional bool is_negotiable = 5;
    optional bool is_long_term = 6;
    optional string description = 7;
    optional uint32 start_term = 8;
    optional uint32 end_term = 9;
    optional uint32 created_date = 10;
    optional uint32 finished_date = 11;
    optional string status = 12;
    optional string address_street = 13;
    optional string address_house_number = 14;
    optional string address_city = 15;
    optional string address_post_code = 16;
}
message CreateAnnouncementResponse {
    string id = 1;
}
