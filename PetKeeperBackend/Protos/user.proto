syntax = "proto3";

option csharp_namespace = "grpc_hello_world";

service AuthService {
  rpc Authenticate(AuthRequest) returns (AuthResponse);
}

message UserIdentifier {
    oneof key {
        string email = 1;
        string id = 2;
        string username = 3;
    }
    optional string primary_address_id = 4;
}

message AuthRequest {
  UserIdentifier user_id = 1;
  string password = 2;
}

message AuthResponse {
  string token = 1;
}


service UserService {
    rpc CreateUser (UserCreate) returns (UserIdentifier);
    rpc GetUser (UserGet) returns (UserFull);
    rpc UpdateUser (UserUpdate) returns (UserUpdate);  // Only updated fields are returned
    rpc UpdateUserCredentials (UserUpdateCredentials) returns  (UserUpdate);
    rpc DeleteUser (UserIdentifier) returns (UserIdentifier);
}

message UserUpdateCredentials {
    optional UserIdentifier user_id = 1;
    optional string email = 2;
    optional string username = 3;
    optional string password_hash = 4;
}

message UserUpdate {
    optional UserIdentifier user_id = 1;
    optional string first_name = 2;
    optional string last_name = 3;
    optional string phone = 4;
    optional string pesel = 5;
    // Updating addresses done in a different endpoint
    optional string avatar_url = 6;
    optional string document_url = 7;
    // States
    optional bool is_activated = 8;
    optional bool is_verified = 9;
    optional bool is_banned = 10;
    optional bool is_admin = 11;
    // Only for UserUpdateCredentials
    optional string email = 12;
    optional string username = 13;
    optional bool password_hash = 14;
}

message UserCreate {
    string email = 1;
    string username = 2;
    string password = 3;
    string first_name = 4;
    string last_name = 5;
    AddressCreate primary_address = 6;
    string phone = 7;
    string pesel = 8;
    
    optional string avatar_url = 9;
    repeated string document_url = 10;
}

message UserGet {
    optional UserIdentifier user_id = 1;
    optional string first_name = 2;
    optional string last_name = 3;
    optional string phone = 4;
    optional string pesel = 5;
    // Updating addresses done in a different endpoint
    optional string avatar_url = 6;
    optional string document_url = 7;
    // States
    optional bool is_activated = 8;
    optional bool is_verified = 9;
    optional bool is_banned = 10;
    optional bool is_admin = 11;
}

message UserFull {
    string id = 1;
    string email = 2;
    string username = 3;
    string first_name = 4;
    string last_name = 5;
    string phone = 6;
    string pesel = 7;
    AddressCreate primary_address = 8;
    string avatar_url = 9;
    repeated string document_url = 10;
    // States
    bool is_activated = 11;
    bool is_verified = 12;
    bool is_banned = 13;
    bool is_admin = 14;
}


service AddressService {
    rpc CreateAddress (AddressCreate) returns (AddressMinimal);
    rpc GetUserAddresses (AddressGet) returns (AddressList);
    rpc GetAddresses (AddressGet) returns (AddressList);
    rpc UpdateAddress (AddressUpdate) returns (AddressUpdate);
    rpc DeleteAddress (AddressMinimal) returns (AddressMinimal);
}
message AddressMinimal {
    string id = 1;
    optional string owner_id = 2;
}

message AddressCreate {
    optional string id = 1;
    string street = 2;
    string house_number = 3;
    optional string apartment_number = 4;
    string city = 5;
    string post_code = 6;
    optional string owner_id = 7;
    optional bool is_primary = 8;
    optional string description = 9;
}
message AddressGet {
    optional string id = 1;
    optional string street = 2;
    optional string house_number = 3;
    optional string apartment_number = 4;
    optional string city = 5;
    optional string post_code = 6;
    optional bool is_primary = 7;
    optional string owner_id = 8;
    optional string description = 9;
}

message AddressUpdate {
    string id = 1;
    optional string street = 2;
    optional string house_number = 3;
    optional string apartment_number = 4;
    optional string city = 5;
    optional string post_code = 6;
    optional string owner_id = 7;
    optional bool is_primary = 8;
    optional string description = 9;
}

message AddressList {
    repeated AddressCreate addresses = 1;
}

service AnimalService {
    rpc CreateAnimal (AnimalCreate) returns (AnimalMinimal);
    rpc GetAnimals (AnimalGet) returns (AnimalList);
    rpc DeleteAnimal (AnimalMinimal) returns (AnimalMinimal);
    rpc UpdateAnimal (AnimalUpdate) returns (AnimalUpdate);
}

message AnimalMinimal {
    string id = 1;
    optional string owner_id = 2;
}

message AnimalCreate {
    optional string id = 1;
    optional string owner_id = 2;
    string name = 3;
    string type = 4;
    string photo = 5;
    string description = 6;
}

message AnimalGet {
    optional string id = 1;
    optional string owner_id = 2;
    optional string name = 3;
    optional string type = 4;
    optional string description = 5;
}

message AnimalUpdate {
    string id = 1;
    optional string name = 2;
    optional string type = 3;
    string photo = 4;
    optional string description = 5;
}

message AnimalList {
    repeated AnimalCreate animals = 1;
}


service AnnouncementService {
    rpc CreateAnnouncement (AnnouncementCreate) returns (AnnouncementMinimal);
    rpc GetAnnouncements (AnnouncementGet) returns (AnnouncementList);
    rpc UpdateAnnouncement (AnnouncementUpdate) returns (AnnouncementUpdate);
    rpc DeleteAnnouncement (AnnouncementMinimal) returns (AnnouncementMinimal);
}

message AnnouncementMinimal {
    string id = 1;
    string author_id = 2;
    string keeper_id = 3;
    string animal_id = 4;
    string address_id = 5;
}

message AnnouncementCreate {
    optional string id = 1;
    string author_id = 2;
    string keeper_id = 3;
    string animal_id = 4;
    uint32 keeper_profit = 5;
    bool is_negotiable = 6;
    optional string description = 7;
    uint64 start_term = 8;
    uint64 end_term = 9;
    optional uint64 created_date = 10;
    optional uint64 finished_date = 11;
    optional string status = 12;
    string address_id = 13;
}

message AnnouncementGet {
    optional string id = 1;
    optional string author_id = 2;
    optional string keeper_id = 3;
    optional string animal_id = 4;
    optional uint32 keeper_profit_less = 5;
    optional uint32 keeper_profit_more = 6;
    optional bool is_negotiable = 7;
    optional string description = 8;
    optional uint64 start_term_before = 9;
    optional uint64 end_term_before = 10;
    optional uint64 created_date_before = 11;
    optional uint64 finished_date_before = 12;
    optional uint64 start_term_after = 13;
    optional uint64 end_term_after = 14;
    optional uint64 created_date_after = 15;
    optional uint64 finished_date_after = 16;
    optional string status = 17;
    optional string address_id = 18;
}

message AnnouncementUpdate {
    string id = 1;
    optional string author_id = 2;
    optional string keeper_id = 3;
    optional string animal_id = 4;
    optional uint32 keeper_profit = 5;
    optional bool is_negotiable = 6;
    optional string description = 7;
    optional uint64 start_term = 8;
    optional uint64 end_term = 9;
    optional uint64 created_date = 10;
    optional uint64 finished_date = 11;
    optional string status = 12;
    optional string address_id = 13;
}

message AnnouncementList {
    repeated AnnouncementCreate announcements = 1;
}
