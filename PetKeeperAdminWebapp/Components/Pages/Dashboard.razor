@page "/dashboard"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #e0f7fa;
        color: #00796b;
        margin: 0;
        padding: 20px;
    }

    h2 {
        color: #00796b;
        margin-bottom: 20px;
        font-size: 1.5em;
    }

    .button-container {
        display: flex;
        gap: 1rem;
        justify-content: flex-start;
    }

    button {
        padding: 10px 20px;
        background-color: #00796b;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1.1em;
        transition: background-color 0.3s ease;
    }

    button:hover {
        background-color: #004d40;
    }
</style>

<h2>Welcome to PetKeeper admin dashboard!</h2>

<div class="button-container">
    <button @onclick="NavigateToUsers">Users</button>
    <button @onclick="NavigateToOpinions">Opinions</button>
    <button @onclick="NavigateToAnnouncements">Announcements</button>
</div>


@code {
    private bool IsAuthorized { get; set; } = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var token = await LocalStorage.GetItemAsync<string>("auth_token");
            IsAuthorized = !string.IsNullOrEmpty(token);

            if (!IsAuthorized)
            {
                NavigationManager.NavigateTo("/login");
            }

            // Trigger re-render after state change
            StateHasChanged();
        }
    }

    private void NavigateToUsers()
    {
        NavigationManager.NavigateTo("/users");
    }

    private void NavigateToOpinions()
    {
        NavigationManager.NavigateTo("/opinions");
    }

    private void NavigateToAnnouncements()
    {
        NavigationManager.NavigateTo("/announcements");
    }
}
